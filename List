using System;

namespace Jump
{
    public class ListNode
    {
        public int val;
        public ListNode next;
        public ListNode(int val = 0, ListNode next = null)
        {
            this.val = val;
            this.next = next;
        }
    }
    internal class Program
    {
        static void Main(string[] args)
        {
            Solution solution = new Solution();
            ListNode list1 = new ListNode(1, new ListNode(2, new ListNode(4)));
            ListNode list2 = new ListNode(1, new ListNode(3, new ListNode(4)));
            ListNode result = solution.MergeTwoLists(list1, list2);
            while (result != null)
            {
                Console.Write(result.val + " ");
                result = result.next;
            }
        }
    }
        public class Solution
        {
            public ListNode MergeTwoLists(ListNode list1, ListNode list2)
            {
                var dummyList = new ListNode(0);
                var head = dummyList;

                while (list1 != null && list2 != null)
                {
                    if (list1.val <= list2.val)
                    {
                        dummyList.next = list1;
                        dummyList = dummyList.next;
                        list1 = list1.next;
                    }
                    else
                    {
                        dummyList.next = list2;
                        dummyList = dummyList.next;
                        list2 = list2.next;
                    }
                }

                if (list1 != null)
                {
                    dummyList.next = list1;
                }
                else if (list2 != null)
                {
                    dummyList.next = list2;
                }

                return head.next;
            }
        }
    
}